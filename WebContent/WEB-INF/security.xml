<?xml version="1.0" encoding="UTF-8"?>
<bean:beans
        xmlns:bean="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.springframework.org/schema/security"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
   http://www.springframework.org/schema/security
   http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <http authentication-manager-ref="dao-auth"
          access-decision-manager-ref="accessDecisionManager">
        <intercept-url pattern="/logout" access="permitAll"/>
        <intercept-url pattern="/login" access="permitAll"/>
        <intercept-url pattern="/register" access="permitAll"/>
        <intercept-url pattern="/register/member" access="permitAll"/>
        <intercept-url pattern="/resources/**" access="permitAll" />
        <!--<intercept-url pattern="/ownerHome" access="hasRole('OWNER')"/>-->
        <!--<intercept-url pattern="/memberHome" access="hasRole('MEMBER')"/>-->
        <!--<intercept-url pattern="/**" access="hasAnyRole('OWNER', 'MEMBER')"/>-->
        <form-login login-page="/" authentication-failure-url="/denied"
                    username-parameter="username" password-parameter="password"
                    authentication-success-handler-ref="authSuccessHandler" />
        <logout invalidate-session="true" logout-success-url="/"
                logout-url="/j_spring_security_logout" />
        <access-denied-handler error-page="/denied"/>
        <session-management invalid-session-url="/">
            <concurrency-control max-sessions="1"
                                 expired-url="/" />
        </session-management>
    </http>

    <authentication-manager id="dao-auth">
        <authentication-provider user-service-ref="userService">
            <password-encoder ref="passwordEncoder"/>
        </authentication-provider>
    </authentication-manager>

    <bean:bean id="authProvider"
          class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <bean:property name="userDetailsService" ref="userService" />
        <bean:property name="passwordEncoder" ref="passwordEncoder" />
    </bean:bean>

    <bean:bean id="userService" class="com.sap.poc.services.impl.UserServiceImp">
        <bean:constructor-arg ref="hibernateUserDao"/>
    </bean:bean>

    <bean:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <bean:constructor-arg name="strength" value="11"/>
    </bean:bean>

    <bean:bean id="roleVoter"
                class="org.springframework.security.access.vote.RoleVoter">
        <bean:property name="rolePrefix" value=""></bean:property>
    </bean:bean>

    <bean:bean id="accessDecisionManager"
                class="org.springframework.security.access.vote.AffirmativeBased">
        <bean:constructor-arg>
            <bean:list>
                <bean:bean
                        class="org.springframework.security.access.vote.AuthenticatedVoter" />
                <bean:bean class="org.springframework.security.access.vote.RoleVoter" />
                <bean:bean class="org.springframework.security.web.access.expression.WebExpressionVoter" />
            </bean:list>
        </bean:constructor-arg>
    </bean:bean>

    <bean:bean id="authSuccessHandler" class="com.sap.poc.config.AuthSuccessHandler" />

</bean:beans>